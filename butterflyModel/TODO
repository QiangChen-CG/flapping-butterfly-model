To-do:
- Overall
    - Move functions and modules around to create clean repository once
    structure is more defined
    - Unit tests?
    - Port code calculating equivalent wing and building 3D model for
    animations
    - Error handling -> pythonic way to handle errors and enforce proper
    arguments?
    - Once GUI -> enforce variable values -> with GUI or within classes?
        - Within classes would be more modular I think
    - Creation of Butterfly object with initial data is hacked together.  Flesh
     out later, for now just create to test.  Should x, y_le, y_te be in a dict
      or array?
     - Subfolder for data files(e.g. treeNymph.pkl)
     - Make note that wing building functions refer to the span axis as the
     x-axis and the chord axis as the y-axis(to prevent confusion), where in
     the butterfly body coordinate system, the two are switched.
        - NOTED, but update when you decide how to transform back into body
        system

- buildButterfly.py
    - Docstring
    - Error handling: more pythonic way to implement parameter checks(e.g.
    mass>0)?

- convertmatfiles.py
    - Update docstring to clarify what the .mat data is being turned into